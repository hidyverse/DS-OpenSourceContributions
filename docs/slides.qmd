---
title: "Learning Data Science through Open Source Contribution"
format:
  revealjs:
    theme: [default, assets/custom.scss]
    logo: assets/dsi.png
output-file: "index"
---

## In 2 Parts: 

First, a short lecture about open source contributions

Second, a hands-on time to try what you've just learned.

## Why Contribute to Open Source

-   A great way to improve your existing skills

-   and improve the software you rely on

-   Networking!

    -   meet people with similar interests

    -   find mentors

    -   build public artifacts

-   Satisfying

## What it means to Contribute

-   You don't have to contribute code and you don't have to contribute to software

-   Event planning

    -   organize workshops, meetups, conferences

-   Designing

    -   restructure a project for usability

    -   put together a style guide

-   Writing

    -   improve documentation

    -   curate an awesome list

    -   write tutorials

-   Organizing

    -   ask clarifying questions

    -   link similar issues together

## Project Orientation: Team Members

A typical open source project has the following types of people:

-   **Author:** The person/s or organization that created the project

-   **Owner:** The person/s who has administrative ownership over the organization or repository (not always the same as the original author)

-   **Maintainers:** Contributors who are responsible for driving the vision and managing the organizational aspects of the project (They may also be authors or owners of the project.)

-   **Contributors:** Everyone who has contributed something back to the project

-   **Community Members:** People who use the project. They might be active in conversations or express their opinion on the project\'s direction

## Project Orientation: Documentation

A project also has documentation. These files are usually listed in the top level of a repository.

-   **LICENSE:** By definition, every open source project must have an [open source license](https://choosealicense.com/). If the project does not have a license, it is not open source.

-   **README:** The README is the instruction manual that welcomes new community members to the project. It explains why the project is useful and how to get started.

-   **CONTRIBUTING:** Whereas READMEs help people *use* the project, contributing docs help people *contribute* to the project. It explains what types of contributions are needed and how the process works. While not every project has a CONTRIBUTING file, its presence signals that this is a welcoming project to contribute to.

-   **CODE_OF_CONDUCT:** The code of conduct sets ground rules for participants\' behavior associated and helps to facilitate a friendly, welcoming environment. While not every project has a CODE_OF_CONDUCT file, its presence signals that this is a welcoming project to contribute to.

-   **Other documentation:** There might be additional documentation, such as tutorials, walkthroughs, or governance policies, especially on bigger projects.

## Project Orientation: Discussion

-   **Issue tracker:** Where people discuss issues related to the project.

-   **Pull requests:** Where people discuss and review changes that are in progress.

-   **Discussion forums or mailing lists:** Some projects may use these channels for conversational topics (for example, *\"How do I...\"* or *\"What do you think about...\"* instead of bug reports or feature requests). Others use the issue tracker for all conversations.

-   **Synchronous chat channel:** Some projects use chat channels (such as Slack or IRC) for casual conversation, collaboration, and quick exchanges.

## 

## Finding a Project

## How to Contribute

## Post-Contribution

## Part 2: Lab

-   log into github

-   make a change to DSI documentation

-   send a Pull Request
