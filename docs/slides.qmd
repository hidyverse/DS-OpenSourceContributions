---
title: "Learning Data Science through Open Source Contribution"
format:
  revealjs:
    theme: [default, assets/custom.scss]
    logo: assets/dsi.png
output-file: "index"
---

# In 2 Parts:

First, a short lecture about open source contributions \

Second, a hands-on time to try what you've just learned.

::: footer
Adapted from [Open Source Guides](https://opensource.guide/how-to-contribute/)
:::

## Why Contribute to Open Source

-   A great way to improve your existing skills

-   and improve the software you rely on

-   Networking!

    -   meet people with similar interests

    -   find mentors

    -   build public artifacts

-   Satisfying

## What it means to Contribute

You don't have to contribute code and you don't have to contribute to software

-   **Event planning**: organize workshops, meetups, conferences

-   **Designing**: restructure a project for usability, put together a style guide

-   **Writing**: improve documentation, curate an awesome list, write tutorials

-   **Organizing**, ask clarifying questions, link similar issues together

# Team Members

## 

A typical open source project has the following types of people:

-   **Author:** The person/s or organization that created the project

-   **Owner:** The person/s who has administrative ownership over the organization or repository (not always the same as the original author)

-   **Maintainers:** Contributors who are responsible for driving the vision and managing the organizational aspects of the project (They may also be authors or owners of the project.)

## 

-   **Contributors:** Everyone who has contributed something back to the project

-   **Community Members:** People who use the project. They might be active in conversations or express their opinion on the project's direction

# Project Orientation

## 

A project also has documentation such as

-   **LICENSE:** By definition, every open source project must have an [open source license](https://choosealicense.com/)

-   **README:** The README is the instruction manual that welcomes new community members to the project

-   ***CONTRIBUTING*****:** Whereas READMEs help people *use* the project, contributing docs help people *contribute* to the project

-   ***CODE_OF_CONDUCT*****:** The code of conduct sets ground rules for participants' behavior associated and helps to facilitate a friendly, welcoming environment

## Project Discussion 

-   **Issue tracker:** Where people discuss issues related to the project

-   **Pull requests:** Where people discuss and review changes that are in progress

-   **Discussion forums or mailing lists:** Some projects may use these channels for conversational topics (for example, *"How do I..."* or *"What do you think about..."* instead of bug reports or feature requests)

-   **Synchronous chat channel:** Some projects use chat channels (such as Slack or IRC) for casual conversation, collaboration, and quick exchanges

## Finding a Project

Think about the projects you already use, or want to use.

Get ideas from these resources...

::: columns
::: {.column width="50%"}
-   [GitHub Explore](https://github.com/explore/)

-   [Open Source Friday](https://opensourcefriday.com/)

-   [First Timers Only](https://www.firsttimersonly.com/)

-   [CodeTriage](https://www.codetriage.com/)

-   [24 Pull Requests](https://24pullrequests.com/)
:::

::: {.column width="50%"}
-   [Contributor-ninja](https://contributor.ninja/)

-   [First Contributions](https://firstcontributions.github.io/)

-   [SourceSort](https://web.archive.org/web/20201111233803/https://www.sourcesort.com/)

-   [Up For Grabs](https://up-for-grabs.net/)
:::
:::

# How to Contribute

## Tips for effective communication

**Give context.** Help others get quickly up to speed.

> 😇 *\"X doesn\'t happen when I do Y\"*
>
> 😢 *\"X is broken! Please fix it.\"*

**Do your homework beforehand.** It\'s OK not to know things, but show that you tried.

**Keep all communication public.**

::: footer
and more at [Open Source Guides](https://opensource.guide/how-to-contribute/)
:::

# Final checks 🔎

Quick search for key terms...everywhere

Read `CONTRIBUTING`

## Issue vs Pull request

**Usually, issue.**

You should usually open a pull request in the following situations:

-   Submit trivial fixes (for example, a typo, a broken link or an obvious error)

-   Start work on a contribution that was already asked for, or that you\'ve already discussed, in an issue

# Post-Contribution

Celebrate! 🎉 \
\

😢...it's possible no one responds

🚧....someone may request changes to your contribution

👎🏻...it's possible your contribution doesn't get accepted

# Start here! ▶️

<https://github.com/firstcontributions/first-contributions>
